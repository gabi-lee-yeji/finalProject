<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="spring.project.mapper.AdminMapper">
	
	<select id="getNewReportCnt" resultType="int">
		select count(*) from 
			(select memid, count(*) as reportCnt from member_report group by memid) rep,
      		memberinfo info
		where info.memid=rep.memid
		and info.status='일반'
	</select>
	<select id="getNewCertiCnt" resultType="int">
		select count(*) from certiinfo 
		    where to_char(registDate,'YYYY-MM-DD') 
		    between to_char(sysdate-5, 'YYYY-MM-DD') and to_char(sysdate, 'YYYY-MM-DD')
	</select>
	<select id="getMemberLastWeekCnt" resultType="int">
		select count(*) from memberinfo 
	    	where to_char(regDate,'YYYY-MM-DD') 
	    	between to_char(sysdate-7, 'YYYY-MM-DD') and to_char(sysdate, 'YYYY-MM-DD')
	</select>
	<select id="getMemberTodayCnt" resultType="int">
		select count(*) from memberinfo 
			where to_char(regDate,'YYYY-MM-DD') = to_char(sysdate, 'YYYY-MM-DD')
	</select>
	<select id="getNewRequestCnt" resultType="int">
		select count(*) from post_board 
				where board_type = '1:1문의' and post_level=0 
	</select>
	<select id="getNewRequestList" resultType="spring.project.model.Post_BoardDTO">
		select * from 
			(select rownum r, list.* from 
				(select * from post_board 
				where board_type = '1:1문의' and post_level=0 
				order by reg) list)
			where r between #{startRow} and #{endRow}
	</select>
	
	<update id="delCerti">
		update certiinfo set status = #{status} where cnum=#{cnum}
	</update>
	
	<update id="modCertiDate">
		update certidate 
		<set>
			docRegStart1 = NVL(TO_DATE(#{docRegStart1},'YYYY-MM-DD HH24:MI'), docRegStart1),
			<if test="docRegEnd1 != null">
				docRegEnd1 = TO_DATE(#{docRegEnd1},'YYYY-MM-DD HH24:MI'),
			</if>
			docRegStart2 = NVL(TO_DATE(#{docRegStart2},'YYYY-MM-DD HH24:MI'),docRegStart2),
			<if test="docRegEnd2 != null">
				docRegEnd2 = TO_DATE(#{docRegEnd2},'YYYY-MM-DD HH24:MI'),
			</if>
			<if test="docTestStart != null">
				docTestStart = TO_DATE(#{docTestStart},'YYYY-MM-DD HH24:MI'),
			</if>
			<if test="docTestEnd != null">
				docTestEnd = TO_DATE(#{docTestEnd},'YYYY-MM-DD HH24:MI'),
			</if>
			<if test="docResultStart != null">
				docResultStart = TO_DATE(#{docResultStart},'YYYY-MM-DD HH24:MI'),
			</if>
			<if test="docResultEnd != null">
				docResultEnd = TO_DATE(#{docResultEnd},'YYYY-MM-DD HH24:MI'),
			</if>
			<if test="docSubmitStart != null">
				docSubmitStart = TO_DATE(#{docSubmitStart},'YYYY-MM-DD HH24:MI'),
			</if>
			<if test="docSubmitEnd != null">
				docSubmitEnd = TO_DATE(#{docSubmitEnd},'YYYY-MM-DD HH24:MI'),
			</if>
			<if test="pracRegStart1 != null">
				pracRegStart1 = TO_DATE(#{pracRegStart1},'YYYY-MM-DD HH24:MI'),
			</if>
			<if test="pracRegEnd1 != null">
				pracRegEnd1 = TO_DATE(#{pracRegEnd1},'YYYY-MM-DD HH24:MI'),
			</if>
			<if test="pracRegStart2 != null">
				pracRegStart2 = TO_DATE(#{pracRegStart2},'YYYY-MM-DD HH24:MI'),
			</if>
			<if test="pracRegEnd2 != null">
				pracRegEnd2 = TO_DATE(#{pracRegEnd2},'YYYY-MM-DD HH24:MI'),
			</if>
			<if test="pracTestStart != null">
				pracTestStart = TO_DATE(#{pracTestStart},'YYYY-MM-DD HH24:MI'),
			</if>
			<if test="pracTestEnd != null">
				pracTestEnd = TO_DATE(#{pracTestEnd},'YYYY-MM-DD HH24:MI'),
			</if>
			<if test="pracResStart != null">
				pracResStart = TO_DATE(#{pracResStart},'YYYY-MM-DD HH24:MI'),
			</if>
			<if test="pracResEnd != null">
				pracResEnd = TO_DATE(#{pracResEnd},'YYYY-MM-DD HH24:MI'),
			</if>
		</set>
		where datepk = #{datePK}
	</update>
	<select id="getCertiDate" resultType="spring.project.model.CertiDateDTO">
		select * from certidate where datepk = #{datePK}
	</select>

	<delete id="deleteCertiDate">
		delete from certidate
		where datepk in 
		<foreach collection="array" item="datePK" open="(" separator="," close=")">
			#{datePK}
		</foreach>
	</delete>
	
	<update id="updateRepMemStatus">
		update memberinfo 
			<set>
				status = #{status},
				<if test="status=='강제탈퇴'">
					mem_level = '',
					mem_point = 0
				</if>
			</set>
		where memid=#{memid}
	</update>
	
	<select id="getMemberInfo" resultType="spring.project.model.MemberInfoDTO">
		select * from memberinfo where memid=#{memid}
	</select>
	
	<select id="getreportMemInfo" resultType="map">
		select b.pnum, b.board_type, b.subject, a.reportcnt from 
		( select wr_num, count(*) as reportCnt from member_report where memid=#{memid} group by wr_num) a, 
		post_board b
		where
			a.wr_num=b.pnum
	</select>
	<select id="getReportMemList" resultType="spring.project.model.MemberInfoDTO">
		select * from 
			(select memid, count(*) as reportCnt from member_report group by memid) a, 
			memberinfo b 
		where 
			<![CDATA[ a.reportCnt >= 1	]]>
			and a.memid=b.memid
			<if test="status != null"> 
				and b.status = #{status} 
			</if>
		order by a.reportCnt
	</select>
	
	<select id="getMemberFilter" resultType="spring.project.model.MemberInfoDTO"
								parameterType="hashmap">
		select * from memberinfo  where
			<if test="search != null">
				${search} like '%${keyword}%'
			</if>
			<if test="status != null">
				and status in 
				<foreach collection="status" item="type" index="index" open="(" close=")" separator=",">
					#{type[index])
				</foreach>
			</if>
			<if test="mem_level != null">
				and mem_level in 
				<foreach collection="mem_level" item="type" index="index" open="(" close=")" separator=",">
					#{type[index])
				</foreach>
			</if>
			<if test="mem_point1 != 0">
				<![CDATA[ and mem_point >= #{mem_point1} ]]>
			</if>
			<if test="mem_point2 != 0">
				<![CDATA[ and mem_point <= #{mem_point2} ]]>
			</if>
			<if test="regDate1 != null">
				and regdate between #{regDate1} and #{regDate2}
			</if>
			order by 
	</select>
	
	<select id="getMemberCnt" resultType="int">
		select count(*) from memberinfo	
	</select>
	<select id="getMemberList" resultType="spring.project.model.MemberInfoDTO">
		select * from (select rownum r, list.* from (select * from memberInfo  
				<if test="sort != null">
					order by #{sort} #{order}
				</if>
				) list)
	</select>
	
	<select id="getSearchCnt" resultType="int">
		select count(*) from certiinfo where ${search} like '%${keyword}%'
	</select>
	<select id="getSearchList" resultType="spring.project.model.CertiInfoDTO">
		select * from 
			(select rownum r, list.* from 
				(select	* from certiinfo where ${search} like '%${keyword}%') list)
        where r between #{startRow} and #{endRow}
        order by cnum
	</select>
	
	<select id="getCertCnt" resultType="int">
		select count(*) from certiinfo
	</select>
	
	
	<update id="modCertiInfo">
		update certiinfo
		<set>
			<if test="cname != null">cname=#{cname},</if>
			<if test="category != null">category=#{category},</if>
			<if test="clevel != null">clevel=#{clevel},</if>
			company = NVL(#{company}, company),
			website = NVL(#{website}, website),
			price = NVL(#{price}, price),
			cmethod = NVL(#{cmethod}, cmethod),
			subject = NVL(#{subject}, subject),
			cutline = NVL(#{cutline}, cutline),
			cinfo = NVL(#{cinfo}, cinfo),
			cjob = NVL(#{cjob}, cjob),
			ncs_cat = NVL(#{ncs_cat}, ncs_cat),
			notice = NVL(#{notice}, notice)
		</set>
		where cnum=#{cnum}
	</update>
	<update id="modCertiReq">
		update certi_requirement
		<set>
			req_degree = NVL(#{req_degree}, req_degree),
			req_age = NVL(#{req_age}, req_age),
			req_exp = NVL(#{req_exp}, req_exp),
			pre_requisite = NVL(#{pre_requisite}, pre_requisite),
			ref = NVL(#{ref}, ref)
		</set>
		where cnum=#{cnum}
	</update>
	
	<select id="searchNatPeriod" resultType="spring.project.model.CertiDateDTO">
		select * from certidate 
		where clevel=#{clevel}
		and cyear in
		<foreach collection="cyear_list" item="cyear" open="(" separator="," close=")">
			#{cyear}
		</foreach>
		and cround in 
		<foreach collection="cround_list" item="cround" open="(" separator="," close=")">
			#{cround}
		</foreach>
	</select>
	
	<select id="searchPeriod" resultType="spring.project.model.CertiDateDTO">
		select * from certidate 
		where cnum=#{cnum}
	</select>
	<select id="getCertiReqInfo" resultType="spring.project.model.CertiRequirementDTO">
		select * from certi_requirement where cnum=#{cnum}
	</select>
	<select id="getQnetDate" resultType="spring.project.model.CertiDateDTO"
							parameterType="spring.project.model.CertiScheduleDTO">
		select * from certidate 
			where cyear=#{cyear}
			and cround=#{cround}
			and clevel=#{clevel}						
	</select>
	<select id="getQnetDateInfo" resultType="spring.project.model.CertiScheduleDTO">
		select * from certischedule where cnum=#{cnum}
	</select>
	
	<select id="getCertiInfo" resultType="spring.project.model.CertiInfoDTO">
		select * from certiinfo where cnum=#{cnum}
	</select>
	
	<select id="findNextseq" resultType="int">
		select ${sequence}.nextval from dual
	</select>
	
	<select id="findCurrseq" resultType="int">
		select last_number from seq
		where sequence_name = #{sequence}
	</select>
	
	<select id="getCertList" resultType="spring.project.model.CertiInfoDTO">
		select * from (select rownum r, list.* from (select *
		from certiinfo 
			<if	test="category != null and category != ''">
        		where category = #{category}
        	</if>
			<if test="sort != null and sort != 'null' and sort != '' ">
				order by ${sort} ${order}
			</if>
			<if test="sort==null or sort=='' or sort == 'null' ">
				order by cnum asc
			</if>
			nulls last) list)
        where r between #{startRow} and #{endRow}
	</select>
	
	<select id="getDelList" resultType="spring.project.model.CertiInfoDTO"> 
		select 
			cnum,cname,category,clevel,cround,
			to_char(regStart,'YYYY-MM-DD') as regStart,
			to_char(regEnd,'YYYY-MM-DD') as regEnd,
			to_char(reg_addStart,'YYYY-MM-DD') as reg_addStart,
			to_char(reg_addEnd,'YYYY-MM-DD') as reg_addEnd,
			to_char(regStartTime,'HH24:MI') as regStartTime,
			to_char(regEndTime,'HH24:MI') as regEndTime,
			to_char(testDate,'YYYY-MM-DD') as testDate,
			to_char(resDate,'YYYY-MM-DD') as resDate
		from certiinfo where cnum in 
		<foreach collection="array" item="cnum" open="(" separator="," close=")">
			#{cnum}
		</foreach>
		order by cnum
	</select>
	
	<insert id="addCertiReq">
		insert into certi_requirement values(
			#{cnum},
			#{req_degree, jdbcType=VARCHAR},
			#{req_age, jdbcType=VARCHAR},
			#{req_exp, jdbcType=VARCHAR},
			#{pre_requisite, jdbcType=VARCHAR},
			#{ref}
		)
	</insert>
	
	<insert id="addCertiSchedule">
		insert into certiSchedule values (
			#{cnum},
			#{cyear,jdbcType=INTEGER},
			nvl(#{cround}, 0),
			#{clevel},
			sysdate
		)
	</insert>
	
	<insert id="addCertiInfo">
		insert into certiInfo values (
			#{cnum},
			#{cname},
			#{category},
			#{clevel,jdbcType=VARCHAR},
			#{company,jdbcType=VARCHAR},
			#{website,jdbcType=VARCHAR},
			#{requirement,jdbcType=VARCHAR},
			#{cmethod,jdbcType=VARCHAR},
			#{subject,jdbcType=VARCHAR},
			#{cutline,jdbcType=VARCHAR},
			#{cinfo,jdbcType=VARCHAR},
			#{cjob,jdbcType=VARCHAR},
			to_date(#{expiry, jdbcType=VARCHAR},'YYYY-MM-DD'),
			#{status, jdbcType=VARCHAR},
			#{price, jdbcType=VARCHAR},
			#{ncs_cat,jdbcType=VARCHAR},
			#{notice, jdbcType=VARCHAR},
			sysdate
		)
	</insert>
	
	<insert id="addCertiDate" parameterType="spring.project.model.CertiDateDTO">
		insert into certidate values(
			#{cnum, jdbcType=VARCHAR},
			#{cyear},
			#{cround},
			#{clevel},
			to_date(#{docRegStart1} DEFAULT null ON CONVERSION ERROR,'YYYY-MM-DD HH24:MI'),
			to_date(#{docRegEnd1} DEFAULT null ON CONVERSION ERROR,'YYYY-MM-DD HH24:MI'),
			to_date(#{docRegStart2} DEFAULT null ON CONVERSION ERROR,'YYYY-MM-DD HH24:MI'),
			to_date(#{docRegEnd2} DEFAULT null ON CONVERSION ERROR,'YYYY-MM-DD HH24:MI'),
			to_date(#{docTestStart} DEFAULT null ON CONVERSION ERROR,'YYYY-MM-DD HH24:MI'),
			to_date(#{docTestEnd} DEFAULT null ON CONVERSION ERROR,'YYYY-MM-DD HH24:MI'),
			to_date(#{docResultStart} DEFAULT null ON CONVERSION ERROR,'YYYY-MM-DD HH24:MI'),
			to_date(#{docResultEnd} DEFAULT null ON CONVERSION ERROR,'YYYY-MM-DD HH24:MI'),
			to_date(#{docSubmitStart} DEFAULT null ON CONVERSION ERROR,'YYYY-MM-DD HH24:MI'),
			to_date(#{docSubmitEnd} DEFAULT null ON CONVERSION ERROR,'YYYY-MM-DD HH24:MI'),
			to_date(#{pracRegStart1} DEFAULT null ON CONVERSION ERROR,'YYYY-MM-DD HH24:MI'),
			to_date(#{pracRegEnd1} DEFAULT null ON CONVERSION ERROR,'YYYY-MM-DD HH24:MI'),
			to_date(#{pracRegStart2} DEFAULT null ON CONVERSION ERROR,'YYYY-MM-DD HH24:MI'),
			to_date(#{pracRegEnd2} DEFAULT null ON CONVERSION ERROR,'YYYY-MM-DD HH24:MI'),
			to_date(#{pracTestStart} DEFAULT null ON CONVERSION ERROR,'YYYY-MM-DD HH24:MI'),
			to_date(#{pracTestEnd} DEFAULT null ON CONVERSION ERROR,'YYYY-MM-DD HH24:MI'),
			to_date(#{pracResStart} DEFAULT null ON CONVERSION ERROR,'YYYY-MM-DD HH24:MI'),
			to_date(#{pracResEnd} DEFAULT null ON CONVERSION ERROR,'YYYY-MM-DD HH24:MI'),
			CERTIDATE_SEQ.nextval
		)
	</insert>
	
</mapper>